import telebot
import logging
from bot_key import key
from callback_operation import callback_op
from callback_operation import pic_sender
from users_sort import *


bot = telebot.TeleBot(key)

# –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG
)

logger = logging.getLogger(__name__)


@bot.message_handler(commands=['start'])
def start(msg):
    bot.send_message(msg.chat.id, "–ü—Ä–∏–≤–µ—Ç —è Plutonium Network –±–æ—Ç —è –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–æ–º")


@bot.message_handler(commands=['help'])
def help_message(msg):
    bot.send_message(msg.chat.id, "/start - –Ω–∞—á–∞–ª–æ;\n/help-—Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥")


@bot.message_handler(commands=['create_news'])
def news(msg):
    con = sqlite3.connect("DataBase.db")
    cur = con.cursor()
    cur_result = cur.execute("""SELECT player_id, status FROM users""")
    con.commit()
    for i in list(cur_result):
        bot.send_message(int(i[0]), " ".join(msg.text.split()[1:]))


# –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∏—Ö –¥–µ–π—Å—Ç–≤–∏—è–º
@bot.message_handler(content_types=['text'])
def sorting_users(msg):
    users_sorting(bot, msg)


# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å—Ç–∏–∫–µ—Ä –ø–∏—à–µ–º –µ–º—É –æ—Ç–≤–µ—Ç–æ—á–∫—É
@bot.message_handler(content_types=['sticker'])
def anti_sticker(msg):
    bot.send_message(msg.chat.id, "–ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ –º–Ω–µ —Å—Ç–∏–∫–µ—Ä, –≤ –º–∏—Ä–µ –ø–æ–≥–∏–±–∞–µ—Ç 1 –∫–æ—Ç–µ–Ω–æ–∫(üòø")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    callback_op(bot, call)


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=['photo'])
def photo_id(msg):
    con = sqlite3.connect("DataBase.db")
    cur = con.cursor()
    photo = max(msg.photo, key=lambda x: x.height)
    try:
        res = list(cur.execute(f"SELECT place FROM history WHERE id={msg.chat.id}"))[0][0]
        if "send" in res:
            print(res)
            pic_sender(list(cur.execute(f"SELECT login FROM users WHERE player_id={msg.chat.id}"))[0],
                       int(res.split()[-1]), photo.file_id, bot, profile, msg)

    except IndexError:
        register(bot, msg)


# –ó–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ –±–æ—Ç–∞
bot.infinity_polling()
